#BlueJ class context
comment0.target=StatisticsComponent
comment0.text=\n\ Component\ that\ handles\ statistics\ visualization\ and\ generation\ of\ charts.\n\ \n\ @author\ Everyone\n\ @version\ 2.0\n
comment1.params=dataLoader\ cityDataFilter\ graph\ initialCity
comment1.target=StatisticsComponent(DataLoader,\ CityDataFilter,\ GraphAdapter,\ java.lang.String)
comment1.text=\n\ Constructor\ for\ Statistics\ Component\n\ \n\ @param\ dataLoader\ The\ data\ loader\ to\ retrieve\ pollution\ datasets.\n\ @param\ cityDataFilter\ The\ filter\ to\ retrieve\ data\ for\ specific\ cities.\n\ @param\ graph\ The\ graph\ adapter\ to\ create\ visualizations.\n\ @param\ initialCity\ The\ initially\ selected\ city\ name.\n
comment10.params=cityDataList\ dataset
comment10.target=void\ updateStatistics(java.util.List,\ DataSet)
comment10.text=\n\ Update\ statistics\ display\ with\ the\ given\ dataset.\n\ \n\ @param\ cityDataList\ The\ list\ of\ data\ points\ for\ the\ selected\ city\n\ @param\ dataset\ The\ dataset\ containing\ metadata\ about\ the\ pollutant\n
comment11.params=cityName
comment11.target=void\ updateCity(java.lang.String)
comment11.text=\n\ Update\ the\ city\ for\ the\ statistics\ component.\n\ \n\ @param\ cityName\ The\ name\ of\ the\ city\ to\ set\ as\ selected\n
comment12.params=pollutant
comment12.target=void\ setSelectedPollutant(java.lang.String)
comment12.text=\n\ Set\ the\ selected\ pollutant.\n\ \n\ @param\ pollutant\ The\ pollutant\ to\ set\ as\ selected\n
comment13.params=year
comment13.target=void\ setSelectedYear(java.lang.String)
comment13.text=\n\ Set\ the\ selected\ year.\n\ \n\ @param\ year\ The\ year\ to\ set\ as\ selected\n
comment14.params=
comment14.target=javafx.scene.layout.VBox\ getStatsContent()
comment14.text=\n\ Get\ the\ statistics\ content\ pane.\n\ \n\ @return\ The\ VBox\ containing\ all\ the\ statistics\ UI\ components\n
comment2.params=
comment2.target=void\ initializeComponent()
comment2.text=\n\ Initialize\ the\ statistics\ component\n
comment3.params=statisticsType
comment3.target=void\ updateStatisticsView(java.lang.String)
comment3.text=\n\ Updates\ the\ view\ based\ on\ the\ selected\ statistics\ type.\n\ \ \ \ \ \ \n\ @param\ statisticsType\ The\ type\ of\ statistics\ view\ to\ display\n
comment4.params=
comment4.target=void\ setupAveragePollutionView()
comment4.text=\n\ Set\ up\ the\ average\ pollution\ view\ with\ comparision\ option.\n
comment5.params=
comment5.target=void\ setupMaxPollutionView()
comment5.text=\n\ Set\ up\ the\ max\ pollution\ view\ showing\ top\ 5\ most\ polluted\ points\n\ with\ a\ compare\ option.\n
comment6.params=
comment6.target=void\ setupPollutionTrendsView()
comment6.text=\n\ Set\ up\ the\ pollution\ trends\ view\ showing\ average\ pollution\ data\ in\ differnt\ graph.\n
comment7.params=
comment7.target=void\ setupCityComparisonView()
comment7.text=\n\ Set\ up\ the\ city\ comparison\ view\ with\ show\ polltion\ data\ across\ different\ cities.\n
comment8.params=dataPoints\ count
comment8.target=java.util.List\ getTopPollutionPoints(java.util.List,\ int)
comment8.text=\n\ Get\ the\ top\ N\ pollution\ points\ from\ a\ list\ of\ data\ points.\n\ \n\ @param\ dataPoints\ The\ list\ of\ data\ points\ to\ evaluate\n\ @param\ count\ The\ number\ of\ top\ points\ to\ return\n\ @return\ A\ list\ containing\ the\ top\ N\ data\ points\ with\ highest\ pollution\ value\n
comment9.params=statisticsType
comment9.target=void\ refreshStatistics(java.lang.String)
comment9.text=\n\ Refresh\ the\ statistics\ view\ with\ current\ selection\n\ \n\ @param\ statisticsType\ The\ type\ of\ statistics\ view\ to\ refresh\n
numComments=15
